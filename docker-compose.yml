version: '3.8'

services:
  web:
    build: 
      context: ./web
      dockerfile: dev.Dockerfile
    restart: always
    # command: yarn dev
    ports:
      - 3000:3000
    depends_on:
      - api
    volumes:
      - /app/node_modules
      - /app/.next
      - ./web:/app
    links:
      - api
    environment:
      ENV_VARIABLE: ${ENV_VARIABLE}
      NEXT_PUBLIC_ENV_VARIABLE: ${NEXT_PUBLIC_ENV_VARIABLE}

  nginx:
    build: ./nginx
    restart: always
    ports:
      - 8000:80
      - 8080:8080
    depends_on:
      - api
      - web
    volumes:
      - static_volume:/staticfiles
      - uploaded_files:/uploads

  redis:
    image: redis:latest
    restart: always
    expose:
      - 6379
    volumes:
      - redis_data:/data

  api:
    build: .
    command: /bin/bash /api/bin/boot.sh
    restart: always
    volumes:
      - ./api:/api
      - static_volume:/api/staticfiles
      - uploaded_files:/uploads
    expose:
      - 8001
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - PGUSER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=django
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d django -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 10


volumes:
  postgres_data:
  redis_data:
  static_volume:
  uploaded_files:
